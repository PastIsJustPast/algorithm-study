n,m = map(int,input().split())
data = list(map(int,input().split()))

#2차원 배열로 옮기면서 광맥의 상 하 좌 방면에 0짜리 광맥을 추가함
array = [[0] *(m+1) for _ in range(n+2)]

count = 0
for i in range(1,n+1):
    for j in range(1,m+1) :
        array[i][j] = data[count]
        count += 1

#dp테이블 생성
dp = [[0] *(m+1) for _ in range(n+2)]

for j in range(1,m+1):
    for i in range(1,n+1):  
        dp[i][j] = max(dp[i-1][j-1], dp[i][j-1], dp[i+1][j-1]) + array[i][j]   #직전 열에서 올 수 있는 dp테이블의 값중 가장 큰것

print(max([i[4] for i in dp]))
