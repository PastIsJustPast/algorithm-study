#사전 조건
n,k = map(int,input().split())
graph = []
for _ in range(n):
    graph.append(list(map(int,input().split())))
s,x,y = map(int,input().split())

#바이러스 증식 함수
def move_virous(s):
    dx = [0, 0, 1, -1]
    dy = [1, -1, 0, 0]

    count = 0
    while count < s : #s초 까지 반복
        for i in range(1,k +1 ): # 바이러스 하나 선택
            space = []
            for a in range(n) :
                for b in range(n) :
                    if temp[a][b] == i : # 그 바이러스가 있는 곳 찾기
                        space.append([a,b]) # 매초마다 바이러스가 증식하기 위해 필요한 작업으로 매우 중요함
                        #print(count)
                        #print("바이러스",i)
                        #print("바이러스 위치", space)

            for c, d in space:  # 바이러스가 속한 위치에서 하나씩 꺼낸다
                for j in range(4):
                    nc = c + dx[j]
                    nd = d + dy[j]
                    if nc < 0 or nc >= n or nd < 0 or nd >= n:
                        continue
                    if temp[nc][nd] == 0:  # 빈칸인 경우에만!
                        temp[nc][nd] = i
        count += 1

#임시 공간 생성
temp = [[0] * n for _ in range(n)]

#s초 후 x,y 의 바이러스를 출력하는 함수
def solution(s,x,y):
    for i in range(n):
        for j in range(n):
            temp[i][j] = graph[i][j]
    #이동
    move_virous(s)

    if temp[x-1][y-1] == 0 :
        print(-1)
    else:
        print(temp[x-1][y-1])

solution(s,x,y)
